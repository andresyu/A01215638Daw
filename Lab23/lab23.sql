DROP TABLE Clientes_Banca
CREATE TABLE Clientes_Banca(
NoCuenta Varchar(5) NOT NULL,
Nombre Varchar(30),
Saldo Numeric(10,2)
)
DROP TABLE Tipos_Movimiento
CREATE TABLE Tipos_Movimiento(
ClaveM varchar(2) NOT NULL,
Descripcion varchar(30)
)
DROP TABLE Movimientos
CREATE TABLE Movimientos(
NoCuenta varchar(5),
ClaveM varchar(2),
Fecha datetime,
Monto Numeric(10,2),
)
ALTER TABLE Clientes_Banca add constraint Clientes_BancaPK PRIMARY KEY (NoCuenta)
ALTER TABLE Tipos_Movimiento add constraint Tipos_MovimientoPK PRIMARY KEY (ClaveM)
ALTER TABLE Movimientos add constraint Movimientos_NoCuentaFK FOREIGN KEY (NoCuenta) references Clientes_Banca(NoCuenta)
ALTER TABLE Movimientos add constraint Movimientos_ClaveMFK FOREIGN KEY (ClaveM) references Tipos_Movimiento(ClaveM)
BEGIN TRANSACTION PRUEBA1
INSERT INTO CLIENTES_BANCA VALUES('001', 'Manuel Rios Maldonado', 9000);
INSERT INTO CLIENTES_BANCA VALUES('002', 'Pablo Perez Ortiz', 5000);
INSERT INTO CLIENTES_BANCA VALUES('003', 'Luis Flores Alvarado', 8000);
COMMIT TRANSACTION PRUEBA1
SELECT * FROM CLIENTES_BANCA
BEGIN TRANSACTION PRUEBA2
INSERT INTO CLIENTES_BANCA VALUES('004','Ricardo Rios Maldonado',19000);
INSERT INTO CLIENTES_BANCA VALUES('005','Pablo Ortiz Arana',15000);
INSERT INTO CLIENTES_BANCA VALUES('006','Luis Manuel Alvarado',18000);
SELECT * FROM CLIENTES_BANCA
ROLLBACK TRANSACTION PRUEBA2
BEGIN TRANSACTION PRUEBA3
INSERT INTO TIPOS_MOVIMIENTO VALUES('A','Retiro Cajero Automatico');
INSERT INTO TIPOS_MOVIMIENTO VALUES('B','Deposito Ventanilla');
COMMIT TRANSACTION PRUEBA3
BEGIN TRANSACTION PRUEBA4
INSERT INTO MOVIMIENTOS VALUES('001','A',GETDATE(),500);
UPDATE CLIENTES_BANCA SET SALDO = SALDO -500
WHERE NoCuenta='001'
COMMIT TRANSACTION PRUEBA4
SELECT * FROM CLIENTES_BANCA
SELECT * FROM Movimientos
BEGIN TRANSACTION PRUEBA5
INSERT INTO CLIENTES_BANCA VALUES('005','Rosa Ruiz Maldonado',9000);
INSERT INTO CLIENTES_BANCA VALUES('006','Luis Camino Ortiz',5000);
INSERT INTO CLIENTES_BANCA VALUES('001','Oscar Perez Alvarado',8000);

IF @@ERROR = 0
COMMIT TRANSACTION PRUEBA5
ELSE
BEGIN
PRINT 'A transaction needs to be rolled back'
ROLLBACK TRANSACTION PRUEBA5
END
SELECT * FROM CLIENTES_BANCA
IF EXISTS (SELECT name FROM sysobjects
                       WHERE name = 'REGISTRAR_RETIRO_CAJERO' AND type = 'P')
                DROP PROCEDURE REGISTRAR_RETIRO_CAJERO
            GO
CREATE PROCEDURE REGISTRAR_RETIRO_CAJERO
@uNoCuenta VARCHAR(5),
@uMonto NUMERIC(10,2)
AS
BEGIN TRANSACTION Retiro
UPDATE Clientes_Banca
SET Saldo = Saldo - @uMonto
WHERE NoCuenta = @uNoCuenta
IF @@ERROR = 0
COMMIT TRANSACTION Retiro
ELSE
BEGIN
PRINT 'A transaction needs to be rolled back'
ROLLBACK TRANSACTION Retiro
END
GO
SELECT * FROM CLIENTES_BANCA
EXECUTE REGISTRAR_RETIRO_CAJERO '001', 500;
SELECT * FROM CLIENTES_BANCA
IF EXISTS (SELECT name FROM sysobjects
                       WHERE name = 'REGISTRAR_DEPOSITO_VENTANILLA' AND type = 'P')
                DROP PROCEDURE REGISTRAR_DEPOSITO_VENTANILLA
            GO
CREATE PROCEDURE REGISTRAR_DEPOSITO_VENTANILLA
@uNoCuenta VARCHAR(5),
@uMonto NUMERIC(10,2)
AS
BEGIN TRANSACTION Deposito
UPDATE Clientes_Banca
SET Saldo = Saldo + @uMonto
WHERE NoCuenta = @uNoCuenta
IF @@ERROR = 0
COMMIT TRANSACTION Deposito
ELSE
BEGIN
PRINT 'A transaction needs to be rolled back'
ROLLBACK TRANSACTION Retiro
END
GO
SELECT * FROM CLIENTES_BANCA
EXECUTE REGISTRAR_DEPOSITO_VENTANILLA'001', 500;
SELECT * FROM CLIENTES_BANCA